<mxGraphModel dx="0" dy="0" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" background="none" math="0" shadow="0">
  <root>
    <mxCell id="0" />
    <mxCell id="1" parent="0" />
    <mxCell id="node0" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Queue&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Queue(int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- implementation: int&lt;br/&gt;- size: int&lt;br/&gt;- rear: int&lt;br/&gt;- queue: String[]&lt;br/&gt;- front: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ size(): int&lt;br/&gt;+ isEmpty(): boolean&lt;br/&gt;+ offer(String): boolean&lt;br/&gt;+ remove(): String&lt;br/&gt;+ poll(): String&lt;br/&gt;+ contains(String): boolean&lt;br/&gt;+ peek(): String&lt;br/&gt;- myIplementation(int): void&lt;br/&gt;+ add(String): boolean&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-49" y="-14" width="207" height="401" as="geometry" />
    </mxCell>
  </root>
</mxGraphModel>